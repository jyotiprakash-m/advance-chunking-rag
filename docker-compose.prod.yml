services:
  # Redis service for progress storage
  redis:
    image: redis:7-alpine
    container_name: rag-redis-prod
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3
    restart: unless-stopped
    networks:
      - rag-network

  # RAG Chunking API service - Production
  rag-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: rag-chunking-api-prod
    ports:
      - "8000:8000"
    env_file:
      - .env.docker
    environment:
      - REDIS_URL=redis://redis:6379
    volumes:
      - ./logs:/app/logs
      - /tmp:/tmp # For temporary file processing
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: "1.0"
        reservations:
          memory: 1G
          cpus: "0.5"
    networks:
      - rag-network

  # Nginx reverse proxy for production
  nginx:
    image: nginx:alpine
    container_name: rag-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro # SSL certificates
    depends_on:
      - rag-api
    restart: unless-stopped
    networks:
      - rag-network

volumes:
  redis_data:
    driver: local

networks:
  rag-network:
    driver: bridge
